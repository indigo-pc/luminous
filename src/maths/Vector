import numpy as np


class Vector:
    def __init__(self, x=0, y=0, z=0):
        try:
            self.vector = np.array([x, y, z], dtype=float)
        except ValueError as e:
            raise ValueError(
                "All inputs must be numeric and compatible with np.array."
            ) from e

    def __add__(self, other):
        return Vector(*(self.vector + other.vector))

    def __sub__(self, other):
        return Vector(*(self.vector - other.vector))

    def __mul__(self, other):
        return Vector(*(self.vector * other.vector))

    def __truediv__(self, other):
        # TODO how to handle div/0?
        return Vector(*(self.vector / other.vector))

    def normalize(self):
        norm = np.linalg.norm(self.vector)
        if norm == 0:
            return Vector(0, 0, 0)
        return Vector(*(self.vector / norm))

    def dot(self, other):
        return np.dot(self.vector, other.vector)

    def cross(self, other):
        return Vector(*np.cross(self.vector, other.vector))

    def __str__(self):
        return f"Vector({self.vector[0]}, {self.vector[1]}, {self.vector[2]})"
